version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - common-net

        # les bases de don√©es
  mysqldb-blog-service:
    container_name: 'mysqldb-blog-service'
    image: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: "BLOG-DB"
      MYSQL_ROOT_HOST: "%"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      timeout: 20s
      retries: 10
    restart: always
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - common-net


  mysqldb-chat-service:
    container_name: 'mysqldb-chat-service'
    image: mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: "MESSAGE"
      MYSQL_ROOT_HOST: "%"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost" ]
      timeout: 20s
      retries: 10
    restart: always
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - common-net


  mysqldb-email-service:
    container_name: 'mysqldb-email-service'
    image: mysql
    ports:
      - "3310:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: "email-DB"
      MYSQL_ROOT_HOST: "%"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      timeout: 20s
      retries: 10
    restart: always
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - common-net


        #les micro-services
  blog-service:
    container_name: 'blog-service'
    build: ./blog-service
    ports:
      - "8081:8081"
    links:
      - "mysqldb-blog-service"
      - "discovery-server"
    depends_on:
      - mysqldb-blog-service
      - discovery-server
      - api-gateway
    restart: always
    networks:
      - common-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - spring.datasource.url=jdbc:mysql://mysqldb-blog-service:3306/BLOG-DB?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka


  chat-service:
        container_name: 'chat-service'
        build: ./chat-service
        ports:
          - "8091:8091"
        links:
          - "mysqldb-chat-service"
          - "discovery-server"
        depends_on:
          - mysqldb-chat-service
          - discovery-server
          - api-gateway
        restart: always
        networks:
          - common-net
        environment:
          - SPRING_PROFILES_ACTIVE=docker
          - spring.datasource.url=jdbc:mysql://mysqldb-chat-service:3306/MESSAGE?createDatabaseIfNotExist=true
          - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka


  email-service:
    container_name: 'email-service'
    build: ./ms-email
    ports:
      - "8099:8099"
    links:
      - "mysqldb-email-service"
      - "discovery-server"
    depends_on:
      - mysqldb-email-service
      - discovery-server
      - api-gateway
    restart: always
    networks:
      - common-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - spring.datasource.url=jdbc:mysql://mysqldb-email-service:3306/email-DB?createDatabaseIfNotExist=true
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka


        #discovery server
  discovery-server:
    build: ./DiscoveryServer
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    hostname: discovery-server
    networks:
      - common-net


        # gateway
  api-gateway:
    build: ./gateway-service
    container_name: api-gateway
    ports:
      - "8762:8762"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
      - app.eureka-server=discovery-server
    depends_on:
      - discovery-server
    networks:
      - common-net

        # kafka
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - common-net

        # network
networks:
  common-net:
    driver: bridge
